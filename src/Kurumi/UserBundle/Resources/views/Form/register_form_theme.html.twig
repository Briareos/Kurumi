{% extends 'MopaBootstrapBundle:Form:fields.html.twig' %}

{% block label_asterisk %}
{% endblock label_asterisk %}

{% block _user_register_timezone_widget %}
{{ form_widget(form) }}
{% spaceless %}
<script>
    $(document).ready(function () {
        var registerTimezone = function () {
            var timezone = window.jstz.determine_timezone();
            $('#{{ id }}').val(timezone.name());
        };
        if (typeof window.jstz === 'undefined') {
            $.ajax({
                url:"{{ asset('bundles/user/js/jstz.min.js') }}",
                datType:"script",
                success:registerTimezone
            });
        } else {
            registerTimezone();
        }
    });
</script>
{% endspaceless %}
{% endblock _user_register_timezone_widget %}

{% block _user_register_profile_city_widget %}
{% set attr = attr|merge({autocomplete:'off'}) %}
{{ form_widget(form) }}
{% spaceless %}
<script>
    $(document).ready(function () {
        var labels = [], mapped = {}, timezone;
        $('#{{ id }}').typeahead({
            source:function (query, process) {
                $.getJSON('http://ws.geonames.org/searchJSON', {
                    username:"grayfox",
                    lang:"en",
                    style:"full",
                    featureClass:"P",
                    maxRows:8,
                    country:"RS",
                    name_startsWith:query.split(',').shift()
                }, function (data) {
                    labels = [];
                    mapped = {};
                    $.each(data.geonames,
                            function (i, item) {
                                if (item.countryCode === "US" || item.countryCode === "CA") {
                                    item.label = item.name + (item.adminName1 ? ", " + item.adminName1 : "") + ", " + item.countryCode;
                                } else {
                                    item.label = item.name + ", " + item.countryName;
                                }
                                labels.push(item.label);
                                mapped[item.label] = item;
                            }).sort(function (a, b) {
                                if (a.population === b.population) {
                                    return 0;
                                } else {
                                    return (a.population < b.population) ? 1 : -1;
                                }
                            });
                    process(labels);
                });
            }, updater:function (item) {
                var data = mapped[item];
                return item;
            }
        });
    })
</script>
{% endspaceless %}
{% endblock _user_register_profile_city_widget %}